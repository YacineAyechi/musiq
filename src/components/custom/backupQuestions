"use client";

import { useState } from "react";
import { Card, CardContent, CardFooter, CardHeader } from "../ui/card";
import { Button } from "../ui/button";
import { CountdownCircleTimer } from "react-countdown-circle-timer";
import Image from "next/image";

const Question = () => {
  const [difficulty, setDifficulty] = useState("");
  const [isPlaying, setIsPlaying] = useState(false);
  const [questionIndex, setQuestionIndex] = useState(0);
  const [score, setScore] = useState(0);
  const [showResult, setShowResult] = useState(false);
  const [key, setKey] = useState(0);
  const [answers, setAnswers] = useState([]);

  const questions = {
    easy: [
      {
        question: "Complete this lyrics:",
        imageUrl: "/im2.png",
        options: ["Elvis Presley", "Michael Jackson", "Prince", "Madonna"],
        answer: "Michael Jackson",
      },
      {
        question: "Which band released the album 'Abbey Road'?",
        imageUrl: "/images.jpeg",
        options: [
          "The Beatles",
          "The Rolling Stones",
          "Led Zeppelin",
          "Pink Floyd",
        ],
        answer: "The Beatles",
      },
    ],
    medium: [
      {
        question: "Who is the lead singer of U2?",
        options: ["Bono", "Freddie Mercury", "David Bowie", "Mick Jagger"],
        answer: "Bono",
      },
      {
        question: "Which artist is famous for the song 'Rolling in the Deep'?",
        options: ["Adele", "BeyoncÃ©", "Lady Gaga", "Rihanna"],
        answer: "Adele",
      },
    ],
    hard: [
      {
        question: "Who composed the opera 'The Magic Flute'?",
        options: ["Beethoven", "Mozart", "Bach", "Handel"],
        answer: "Mozart",
      },
      {
        question: "What was the first music video played on MTV?",
        options: [
          "Thriller",
          "Video Killed the Radio Star",
          "Like a Virgin",
          "Billie Jean",
        ],
        answer: "Video Killed the Radio Star",
      },
    ],
  };

  const handleStartQuiz = (selectedDifficulty) => {
    setDifficulty(selectedDifficulty);
    setIsPlaying(true);
    setQuestionIndex(0);
    setScore(0);
    setShowResult(false);
    setKey((prevKey) => prevKey + 1); // Reset the timer
    setAnswers([]);
  };

  const handleAnswer = (option) => {
    const correctAnswer = questions[difficulty][questionIndex].answer;
    const isCorrect = option === correctAnswer;
    setAnswers([
      ...answers,
      {
        question: questions[difficulty][questionIndex].question,
        selected: option,
        correct: correctAnswer,
        isCorrect,
      },
    ]);

    if (isCorrect) {
      setScore(score + 1);
    }

    if (questionIndex < questions[difficulty].length - 1) {
      setQuestionIndex(questionIndex + 1);
      setKey((prevKey) => prevKey + 1); // Reset the timer for the next question
    } else {
      setShowResult(true);
    }
  };

  const handleTimeUp = () => {
    const correctAnswer = questions[difficulty][questionIndex].answer;
    setAnswers([
      ...answers,
      {
        question: questions[difficulty][questionIndex].question,
        selected: null,
        correct: correctAnswer,
        isCorrect: false,
      },
    ]);

    if (questionIndex < questions[difficulty].length - 1) {
      setQuestionIndex(questionIndex + 1);
      setKey((prevKey) => prevKey + 1); // Reset the timer for the next question
    } else {
      setShowResult(true);
    }
  };
  return (
    <div className="w-2/3 flex items-center justify-center m-auto mt-11 ctnQuestion">
      {!isPlaying ? (
        <div>
          <Card className="flex">
            <div className="w-3/4">
              <img src="./image.jpg" alt="" />
            </div>
            <div className="flex justify-center mx-auto items-center">
              <div>
                <CardHeader>
                  <h2 className="font-bold text-5xl mb-5 emailWelcome ">
                    Start Quiz
                  </h2>
                  <p>
                    Welcome to the MusIQ Quiz! Select a difficulty level below
                    to start the quiz.
                  </p>
                </CardHeader>
                <CardContent className="flex justify-between">
                  <Button
                    onClick={() => handleStartQuiz("easy")}
                    className="mr-4 w-28"
                  >
                    Easy
                  </Button>
                  <Button
                    onClick={() => handleStartQuiz("medium")}
                    className="mr-4 w-28"
                  >
                    Medium
                  </Button>
                  <Button
                    onClick={() => handleStartQuiz("hard")}
                    className="w-28"
                  >
                    Hard
                  </Button>
                </CardContent>
              </div>
            </div>
          </Card>
        </div>
      ) : showResult ? (
        <Card className="shadow-none border-none">
          <CardHeader>
            <h2 className="text">Your Score: {score}</h2>
          </CardHeader>
          <CardContent>
            {answers.map((answer, index) => (
              <div key={index} className="result">
                <p>Question: {answer.question}</p>
                <p>
                  Your Answer:{" "}
                  <span className={answer.isCorrect ? "correct" : "incorrect"}>
                    {answer.selected || "No Answer"}
                  </span>
                </p>
                <p>Correct Answer: {answer.correct}</p>
              </div>
            ))}
          </CardContent>
          <CardFooter>
            <Button onClick={() => setIsPlaying(false)} className="button">
              Play Again
            </Button>
          </CardFooter>
        </Card>
      ) : (
        <Card className="shadow-none border-none">
          <CardHeader>
            <div className="flex">
              <h2>{questions[difficulty][questionIndex].question}</h2>

              <CountdownCircleTimer
                key={key}
                isPlaying
                duration={10}
                size={45}
                strokeWidth={4}
                colors={["#4a148c", "#ff6d00", "#4a148c", "#ff6d00"]}
                colorsTime={[10, 6, 3, 0]}
                onComplete={handleTimeUp}
              >
                {({ remainingTime }) => (
                  <div className="text-center">{remainingTime}</div>
                )}
              </CountdownCircleTimer>
            </div>
          </CardHeader>
          <CardContent>
            <div className="timer"></div>
            <Image
              src={questions[difficulty][questionIndex].imageUrl}
              alt="Question"
              className=""
              width={964}
              height={542}
            />
            {questions[difficulty][questionIndex].options.map(
              (option, index) => (
                <Button
                  key={index}
                  onClick={() => handleAnswer(option)}
                  className="button"
                >
                  {option}
                </Button>
              )
            )}
          </CardContent>
        </Card>
      )}
    </div>
  );
};

export default Question;
